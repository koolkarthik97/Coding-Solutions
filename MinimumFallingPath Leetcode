class Solution {
    public int minFallingPathSum(int[][] cost) {
        if(cost.length==0)
            return 0;
        if(cost.length==1)
            return cost[0][0];
        int minCost=Integer.MAX_VALUE;
      for(int i=1;i<cost.length;i++){
          for(int j=0;j<cost.length;j++){
              if(j-1>=0 && j-1<cost.length && j+1>=0 && j+1<cost.length)
                cost[i][j]=cost[i][j]+Math.min(cost[i-1][j+1],Math.min(cost[i-1][j],cost[i-1][j-1]));
              else if(j-1>=0 && j-1<cost.length)
                  cost[i][j]=cost[i][j]+Math.min(cost[i-1][j],cost[i-1][j-1]);
              else
                  cost[i][j]=cost[i][j]+Math.min(cost[i-1][j],cost[i-1][j+1]);

              if(i==cost.length-1)
                  minCost=Math.min(minCost,cost[i][j]);
          }
      }

        return (minCost);

    }
}
