class Solution {
    public String longestPalindrome(String s) {
        if(s.length()<2)
            return s;
         int start=0;
        int max=1;
        int dp[][]=new int[s.length()][s.length()];
        for(int i=0;i<s.length();i++)
        {
            dp[i][i]=1;
        }

        for(int i=1;i<s.length();i++){
            if(s.charAt(i)==s.charAt(i-1)) {
                dp[i - 1][i] = 1;
                start=i-1;
                max=2;
            }
            else dp[i-1][i]=0;
        }

        if(s.length()>2) {
            for (int l = 2; l < s.length(); l++) {
                for (int i = 0; i < s.length()-l; i++) {
                    int j = i + l;
                    if(s.charAt(i)==s.charAt(j) && dp[i+1][j-1]==1)
                    {
                        dp[i][j]=1;
                        start=i;
                        int k=j-i+1;
                        if(k>max)
                            max=k;
                    }
                    else
                        dp[i][j]=0;

                }
            }
        }

        //look up for answer.

       return (s.substring(start,start+max));
    }
}
